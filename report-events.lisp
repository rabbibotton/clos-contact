(in-package "CLOS-CONTACT")
(defclass report-events (clog:clog-panel)
  (    (event-table :reader event-table)
    (contact-list :reader contact-list)
    (cc-db :reader cc-db)
))
(defun create-report-events (clog-obj &key (hidden nil) (class nil) (html-id nil) (auto-place t))
  (let ((panel (change-class (clog:create-div clog-obj :content "<div style=\"box-sizing: content-box; position: static; left: 140px; top: 158px;\" id=\"CLOGB3855325277\"></div><select style=\"box-sizing: content-box; position: static; left: 0px; top: 0px; height: 20px; right: 0px; display: inline-block; width: 100%;\" id=\"CLOGB3855325278\"></select><table style=\"box-sizing: content-box; position: static; left: 145px; top: 93px; height: 0px;\" id=\"CLOGB3855325279\" class=\"w3-table-all\"></table>"
         :hidden hidden :class class :html-id html-id :auto-place auto-place) 'report-events)))
    (setf (slot-value panel 'event-table) (attach-as-child clog-obj "CLOGB3855325279" :clog-type 'CLOG:CLOG-DB-TABLE :new-id t))
    (setf (slot-value panel 'contact-list) (attach-as-child clog-obj "CLOGB3855325278" :clog-type 'CLOG:CLOG-LOOKUP :new-id t))
    (setf (slot-value panel 'cc-db) (attach-as-child clog-obj "CLOGB3855325277" :clog-type 'CLOG:CLOG-DATABASE :new-id t))
    (let ((target (cc-db panel))) (declare (ignorable target)) (setf (database-connection target) (dbi:connect :sqlite3  :database-name "/home/dbotton/common-lisp/clos-contact/clos-contact.db")))
    (set-on-change (contact-list panel) (lambda (target) (declare (ignorable target)) (report-events-run (event-table panel) panel)))
    (let ((target (contact-list panel))) (declare (ignorable target)) (setf (clog-database target) (clog-database (cc-db panel)))  (setf (table-name target) "contact") (setf (value-field target) :|rowid|) (setf (option-field target) :|name|) (setf (where-clause target) "") (setf (order-by target) "name") (setf (limit target) "") (setf (row-id-name target) "rowid") (setf (table-columns target) '(rowid name))(get-row target panel))
    (set-on-header (event-table panel) (lambda (target) (declare (ignorable target)) (create-child target "<tr class='w3-green'><th>Event Type</th><th>Start</th><th>End</th><th>Notes</th></tr>")))
    (let ((target (event-table panel))) (declare (ignorable target)) (setf (clog-database target) (clog-database (cc-db panel)))  (setf (table-name target) " ") (setf (where-clause target) "") (setf (order-by target) "") (setf (limit target) "") (setf (row-id-name target) "rowid") (setf (table-columns target) '()))
    panel))
