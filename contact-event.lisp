(in-package "CLOS-CONTACT")
(defclass contact-event (clog:clog-panel)
  (    (event_type_id :reader event_type_id)
    (button-16 :reader button-16)
    (notes :reader notes)
    (label-14 :reader label-14)
    (end_dtime :reader end_dtime)
    (label-11 :reader label-11)
    (start_dtime :reader start_dtime)
    (label-7 :reader label-7)
    (label-4 :reader label-4)
    (contact_id :reader contact_id)
    (contact-event-table :reader contact-event-table)
    (cc-db :reader cc-db)
(win :accessor win)))
(defun create-contact-event (clog-obj &key (hidden nil) (class nil) (html-id nil) (auto-place t))
  (let ((panel (change-class (clog:create-div clog-obj :content "<div style=\"box-sizing: content-box; position: static; left: 75px; top: 158px;\" id=\"CLOGB3866134889\" data-clog-name=\"cc-db\"></div><div style=\"box-sizing: content-box; position: static; left: 98px; top: 167px;\" id=\"CLOGB3866134890\" data-clog-name=\"contact-event-table\"></div><select style=\"box-sizing: content-box; position: absolute; left: 90px; top: 15px; width: 280px; height: 22px;\" id=\"CLOGB3866134891\" data-clog-name=\"contact_id\"></select><label for=\"\" class=\"\" style=\"box-sizing: content-box; position: absolute; left: 15px; top: 15px;\" id=\"CLOGB3866134892\" data-clog-name=\"label-4\">Contact</label><label for=\"\" class=\"\" style=\"box-sizing: content-box; position: absolute; left: 15px; top: 45px;\" id=\"CLOGB3866134893\" data-clog-name=\"label-7\">Type</label><input type=\"datetime-local\" value=\"\" style=\"box-sizing: content-box; position: absolute; left: 90px; top: 75px; width: 280px;\" id=\"CLOGB3866134894\" data-clog-name=\"start_dtime\"><label for=\"\" class=\"\" style=\"box-sizing: content-box; position: absolute; left: 15px; top: 75px;\" id=\"CLOGB3866134895\" data-clog-name=\"label-11\">Start</label><input type=\"datetime-local\" value=\"\" style=\"box-sizing: content-box; position: absolute; left: 90px; top: 110px; width: 280px;\" id=\"CLOGB3866134896\" data-clog-name=\"end_dtime\"><label for=\"\" style=\"box-sizing: content-box; position: absolute; left: 15px; top: 110px;\" id=\"CLOGB3866134897\" data-clog-name=\"label-14\">End</label><textarea name=\"\" cols=\"20\" rows=\"2\" style=\"box-sizing: content-box; position: absolute; inset: 185px 15px 15px;\" id=\"CLOGB3866134898\" data-clog-name=\"notes\"></textarea><button class=\"\" style=\"box-sizing: content-box; position: absolute; left: 15px; top: 147px;\" id=\"CLOGB3866134899\" data-clog-name=\"button-16\">Submit Event</button><select style=\"box-sizing: content-box; position: absolute; left: 90px; top: 45px; width: 280px; height: 22px;\" id=\"CLOGB3866134900\" data-clog-name=\"event_type_id\"></select>"
         :hidden hidden :class class :html-id html-id :auto-place auto-place) 'contact-event)))
    (setf (slot-value panel 'event_type_id) (attach-as-child clog-obj "CLOGB3866134900" :clog-type 'CLOG:CLOG-LOOKUP :new-id t))
    (setf (slot-value panel 'button-16) (attach-as-child clog-obj "CLOGB3866134899" :clog-type 'CLOG:CLOG-BUTTON :new-id t))
    (setf (slot-value panel 'notes) (attach-as-child clog-obj "CLOGB3866134898" :clog-type 'CLOG:CLOG-TEXT-AREA :new-id t))
    (setf (slot-value panel 'label-14) (attach-as-child clog-obj "CLOGB3866134897" :clog-type 'CLOG:CLOG-LABEL :new-id t))
    (setf (slot-value panel 'end_dtime) (attach-as-child clog-obj "CLOGB3866134896" :clog-type 'CLOG:CLOG-FORM-ELEMENT :new-id t))
    (setf (slot-value panel 'label-11) (attach-as-child clog-obj "CLOGB3866134895" :clog-type 'CLOG:CLOG-LABEL :new-id t))
    (setf (slot-value panel 'start_dtime) (attach-as-child clog-obj "CLOGB3866134894" :clog-type 'CLOG:CLOG-FORM-ELEMENT :new-id t))
    (setf (slot-value panel 'label-7) (attach-as-child clog-obj "CLOGB3866134893" :clog-type 'CLOG:CLOG-LABEL :new-id t))
    (setf (slot-value panel 'label-4) (attach-as-child clog-obj "CLOGB3866134892" :clog-type 'CLOG:CLOG-LABEL :new-id t))
    (setf (slot-value panel 'contact_id) (attach-as-child clog-obj "CLOGB3866134891" :clog-type 'CLOG:CLOG-LOOKUP :new-id t))
    (setf (slot-value panel 'contact-event-table) (attach-as-child clog-obj "CLOGB3866134890" :clog-type 'CLOG:CLOG-ONE-ROW :new-id t))
    (setf (slot-value panel 'cc-db) (attach-as-child clog-obj "CLOGB3866134889" :clog-type 'CLOG:CLOG-DATABASE :new-id t))
    (let ((target (cc-db panel))) (declare (ignorable target)) (setf (database-connection target) (dbi:connect :sqlite3  :database-name *database*)))
    (let ((target (contact-event-table panel))) (declare (ignorable target)) (setf (clog-database target) (clog-database (cc-db panel)))  (setf (table-name target) "contact_event") (setf (where-clause target) "") (setf (order-by target) "") (setf (limit target) "") (setf (row-id-name target) "rowid") (setf (table-columns target) '(rowid contact_id event_type_id start_dtime end_dtime notes )))
    (let ((target (contact_id panel))) (declare (ignorable target)) (setf (clog-database target) (clog-database (cc-db panel)))  (setf (table-name target) "contact") (setf (value-field target) :|rowid|) (setf (option-field target) :|disp|) (setf (where-clause target) "") (setf (order-by target) "") (setf (limit target) "") (setf (row-id-name target) "rowid") (setf (table-columns target) '(rowid ("name||' ('||nickname||')'" "disp")))(get-row target panel))
    (let ((target (label-4 panel))) (declare (ignorable target)) (setf (attribute target "for") (clog:js-query target "$('[data-clog-name=\\'undefined\\']').attr('id')")))
    (let ((target (label-7 panel))) (declare (ignorable target)) (setf (attribute target "for") (clog:js-query target "$('[data-clog-name=\\'undefined\\']').attr('id')")))
    (let ((target (label-11 panel))) (declare (ignorable target)) (setf (attribute target "for") (clog:js-query target "$('[data-clog-name=\\'undefined\\']').attr('id')")))
    (let ((target (label-14 panel))) (declare (ignorable target)) (setf (attribute target "for") (clog:js-query target "$('[data-clog-name=\\'undefined\\']').attr('id')")))
    (clog:set-on-click (button-16 panel) (lambda (target) (declare (ignorable target)) (contact-event-submit target panel)))
    (let ((target (event_type_id panel))) (declare (ignorable target)) (setf (clog-database target) (clog-database (cc-db panel)))  (setf (table-name target) "event_type") (setf (value-field target) :|rowid|) (setf (option-field target) :|description|) (setf (where-clause target) "") (setf (order-by target) "") (setf (limit target) "") (setf (row-id-name target) "rowid") (setf (table-columns target) '(rowid description))(get-row target panel))
    panel))
